-- Ashmin Jayson S5 DS
-- Roll No : 14
-- Experiment 8 : Bank rating assigner using PLSQL
-- Date : 03/11/22

Table Creation and Insertion : 

create table accounts(Accno number(10), Name varchar(10), Balance number(10));

insert into accounts values(1, 'Ram', 50000);
insert into accounts values(2, 'Raj', 600);
insert into accounts values(3, 'Kishore', 400);
insert into accounts values(4, 'Thambi', 15000);
insert into accounts values(5, 'Rish', 75000);


Program Code :

Function:
create or replace function categorize(x in number) return varchar is 
msg varchar(10);
begin
	if x > 50000 then
		msg:='Platinum';
	elsif x > 10000 then
		msg:='Gold';
	else 
		msg:='Silver';
	end if;
	return msg;
end;
/



Calling Program:

set serveroutput on

accept x number prompt 'Enter the account number : '

declare
taccno number(2);
bal number(10);
rating  varchar(20);

begin
taccno:=&x;
select balance into bal from accounts where accno = taccno; 
rating := categorize(bal);
dbms_output.put_line('The account number : ' || taccno || ' is in the ' || rating || ' category'); 

end;
/

Output : 

-> select * from accounts;

     ACCNO NAME 	 BALANCE
---------- ---------- ----------
	 1 Ram		   50000
	 2 Raj		     600
	 3 Kishore	     400
	 4 Thambi	   15000
	 5 Rish 	   75000


@goldcaller.sql
Enter the account number : 5
old   7: taccno:=&x;
new   7: taccno:=	  5;
The account number : 5 is in the Platinum category

PL/SQL procedure successfully completed.

@goldcaller.sql
Enter the account number : 2
old   7: taccno:=&x;
new   7: taccno:=	  2;
The account number : 2 is in the Silver category

PL/SQL procedure successfully completed.

@goldcaller.sql
Enter the account number : 4
old   7: taccno:=&x;
new   7: taccno:=	  4;
The account number : 4 is in the Gold category

PL/SQL procedure successfully completed.

